export interface KvStoreListKey<Metadata, Key extends string = string> {
    name: Key;
    expiration?: number;
    metadata?: Metadata;
}
export type KvStoreListResult<Metadata, Key extends string = string> = {
    list_complete: false;
    keys: KvStoreListKey<Metadata, Key>[];
    cursor: string;
    cacheStatus: string | null;
} | {
    list_complete: true;
    keys: KvStoreListKey<Metadata, Key>[];
    cacheStatus: string | null;
};
export interface KvStore<Key extends string = string> {
    get(key: Key, options?: Partial<KvStoreGetOptions<undefined>>): Promise<string | null>;
    get(key: Key, type: 'text'): Promise<string | null>;
    get<ExpectedValue = unknown>(key: Key, type: 'json'): Promise<ExpectedValue | null>;
    get(key: Key, type: 'arrayBuffer'): Promise<ArrayBuffer | null>;
    get(key: Key, type: 'stream'): Promise<ReadableStream | null>;
    get(key: Key, options?: KvStoreGetOptions<'text'>): Promise<string | null>;
    get<ExpectedValue = unknown>(key: Key, options?: KvStoreGetOptions<'json'>): Promise<ExpectedValue | null>;
    get(key: Key, options?: KvStoreGetOptions<'arrayBuffer'>): Promise<ArrayBuffer | null>;
    get(key: Key, options?: KvStoreGetOptions<'stream'>): Promise<ReadableStream | null>;
    list<Metadata = unknown>(options?: KvStoreListOptions): Promise<KvStoreListResult<Metadata, Key>>;
    put(key: Key, value: string | ArrayBuffer | ArrayBufferView | ReadableStream, options?: KvStorePutOptions): Promise<void>;
    getWithMetadata<Metadata = unknown>(key: Key, options?: Partial<KvStoreGetOptions<undefined>>): Promise<KvStoreGetWithMetadataResult<string, Metadata>>;
    getWithMetadata<Metadata = unknown>(key: Key, type: 'text'): Promise<KvStoreGetWithMetadataResult<string, Metadata>>;
    getWithMetadata<ExpectedValue = unknown, Metadata = unknown>(key: Key, type: 'json'): Promise<KvStoreGetWithMetadataResult<ExpectedValue, Metadata>>;
    getWithMetadata<Metadata = unknown>(key: Key, type: 'arrayBuffer'): Promise<KvStoreGetWithMetadataResult<ArrayBuffer, Metadata>>;
    getWithMetadata<Metadata = unknown>(key: Key, type: 'stream'): Promise<KvStoreGetWithMetadataResult<ReadableStream, Metadata>>;
    getWithMetadata<Metadata = unknown>(key: Key, options: KvStoreGetOptions<'text'>): Promise<KvStoreGetWithMetadataResult<string, Metadata>>;
    getWithMetadata<ExpectedValue = unknown, Metadata = unknown>(key: Key, options: KvStoreGetOptions<'json'>): Promise<KvStoreGetWithMetadataResult<ExpectedValue, Metadata>>;
    getWithMetadata<Metadata = unknown>(key: Key, options: KvStoreGetOptions<'arrayBuffer'>): Promise<KvStoreGetWithMetadataResult<ArrayBuffer, Metadata>>;
    getWithMetadata<Metadata = unknown>(key: Key, options: KvStoreGetOptions<'stream'>): Promise<KvStoreGetWithMetadataResult<ReadableStream, Metadata>>;
    delete(key: Key): Promise<void>;
}
export interface KvStoreListOptions {
    limit?: number;
    prefix?: string | null;
    cursor?: string | null;
}
export interface KvStoreGetOptions<Type> {
    type: Type;
    cacheTtl?: number;
}
export interface KvStorePutOptions {
    expiration?: number;
    expirationTtl?: number;
    metadata?: any | null;
}
export interface KvStoreGetWithMetadataResult<Value, Metadata> {
    value: Value | null;
    metadata: Metadata | null;
    cacheStatus: string | null;
}
//# sourceMappingURL=kv_store.d.ts.map